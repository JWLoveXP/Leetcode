地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），
也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？
方法：dfs，dp数组记录那些已经访问过了，后边不需在继续访问
void dfs(vector<vector<int>>&dp, int m , int n, int i, int j, vector<int>&count, int k, int& res)
{
	if (i < 0 || i >= m || j < 0 || j >= n || dp[i][j] == 1)
		return;
	dp[i][j] = 1;
	if ((count[i] + count[j]) <= k)
		res++;
	else
		return;
	dfs(dp, m, n, i - 1, j, count, k, res);
	dfs(dp, m, n, i + 1, j, count, k, res);
	dfs(dp, m, n, i, j - 1, count, k, res);
	dfs(dp, m, n, i, j + 1, count, k, res);
}
int movingCount(int m, int n, int k) {
	if (k < 0)
		return 0;
	int len = m>n ? m : n;
	vector<int>count(len, 0);
	int i, j, num = 0;
	for (i = 0; i < len; i++)
	{
		if (i % 10 == 0)
		{
			j = i;
			num = 0;
			while (j > 0)
			{
				num += j % 10;
				j /= 10;
			}
		}
		count[i] = num;
		num++;
	}

	vector<vector<int>>dp(m, vector<int>(n, 0)); 
	int res = 0;
	dfs(dp, m, n, 0, 0, count, k, res);
	return res;
}
