不使用运算符 + 和 - ，计算两整数 a 、b 之和

方法：既然不能使用+和-，那么只能利用位运算来计算和，对于某个位的和，有四种计算方式
1 + 1 = 0 ==》进位
1 + 0 = 1
0 + 1 = 1
0 + 0 = 0

不考虑进位的话，和的结果正好是两数异或的结果，而进位则是两数与并左移动以为，那么两数之和可以拆分成 两数异或 + 两数与<<1，不断循环，直到进位为0
在这里需要使用(unsigned int)a&b << 1，否则存在负数时会出错
int getSum(int a, int b) {
	if (a == 0)
		return b;
	int temp;
	while (b != 0)
	{
		temp = (unsigned int)a&b << 1;
		a = a^b;
		b = temp;
	}
	return a;
}
