一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)

方法：异或，相同的数异或结果为0，所以所有的数异或之后结果就是两个出现一次数的异或结果，找到异或结果中两个数不同的位，即异或之后为1的位，利用这位将数字分成两部分，
注意：&的优先级低于==，所有得用括号(h & res)

vector<int> singleNumbers(vector<int>& nums) {
	int n = nums.size();
	if (n == 2)
		return nums;
	int res = 0;
	int i;
	//相同的数异或结果为0，所以所有的数异或之后结果就是两个出现一次数的异或结果
	for (i = 0; i < n; i++)
		res ^= nums[i];
	int h = 1;//找到两个数不同的位
	while ((h & res) == 0)
		h <<= 1;
	//根据不同的位将数分成两部分，各包含出现一次的数
	int first = 0;
	int second = 0;
	for (i = 0; i < n; i++)
	{
		if ((h & nums[i]) == 0)
            first ^= nums[i];
		else
			second ^= nums[i];
	}
	return{ first, second };
}
