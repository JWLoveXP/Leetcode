序列化二叉树的一种方法是使用前序遍历。当我们遇到一个非空节点时，我们可以记录下这个节点的值。如果它是一个空节点，我们可以使用一个标记值记录，例如 #

方法：将字符串按','分割，设置槽，也就是能够添加元素的位置，不管空或者不空都占据位置，没遇到一个元素时，槽减1，如果槽变为负数，则说明错误，
而当遇到的元素不是空时，则又能添加两个槽，即槽+2，遍历一遍后，如果槽变为0，则正确
时间复杂度O(N)，空间复杂度O(N)
bool isValidSerialization(string preorder) {
	istringstream ss(preorder);
	string s;
	int slot = 1;
	while (getline(ss, s, ','))
	{
		slot -= 1;
		if (slot < 0)
			return false;
		if (s[0] != '#')
			slot += 2;
	}
	return slot == 0;

}

方法2：方法1中还需取出字符，可以将这一步骤省略。利用','分割字符，遇到','时，则槽-1，如果槽变为负数，则说明错误
判断前一个字符是否非空，非空则槽+2，由于最后一个元素后面没有','，还需额外判断
bool isValidSerialization(string preorder) {
	int slot = 1;
	int len = preorder.size();
	for (int i = 0; i < len; i++)
	{
		if (preorder[i] == ',')
		{
			slot -= 1;
			if (slot < 0)
				return false;
			if (preorder[i - 1] != '#')
				slot += 2;
		}
	}
	slot -= 1;
	if (preorder[len - 1] != '#')
		slot += 2;
	return slot == 0;
}
