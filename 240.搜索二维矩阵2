编写一个高效的算法来搜索 m x n 矩阵 matrix 中的一个目标值 target。该矩阵具有以下特性：

    每行的元素从左到右升序排列。
    每列的元素从上到下升序排列。
方法：利用矩阵的特性从右上角出发，有三种情况
1.如果当前元素小于目标元素，那么该行不存在左边不存在目标元素，而右边因为上一行中对应列的值大于该元素，而当前行的值也大于该值，所以行加1
2.如果当前元素大于目标元素，那么列号减1，判断左边是否有目标元素
3.相等，返回true
时间复杂度O(N)，空间复杂度O(1)
bool searchMatrix(vector<vector<int>>& matrix, int target) {
	int row = matrix.size();
	if (row == 0)
		return false;
	int col = matrix[0].size();
	if (col == 0)
		return false;
	int i = 0;
	int j = col - 1;
	while (i < row && j >= 0)
	{
		if (matrix[i][j] < target)
			i++;
		else if (matrix[i][j] > target)
			j--;
		else
			return true;
	}
	return false;
}
