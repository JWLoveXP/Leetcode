给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的连续子数组，并返回其长度。
如果不存在符合条件的连续子数组，返回 0

方法：双指针，滑窗思想，左右指针left和i,i不断右移，当sum>s时，记录最小间距，同时left指针右移
时间复杂度O(N)， 空间复杂度O(1)
int minSubArrayLen(int s, vector<int>& nums) {
	int len = nums.size();
	int res = len;
	int i, left = 0;
	int sum = 0;
	for (i = 0; i < len; i++)
	{
		sum += nums[i];
		while (sum > s)
		{
			res = res < (i - left + 1) ? res : (i - left + 1);
			sum -= nums[left];
			left++;
		}
		
	}
	return res == len ? 0 : res;
}
