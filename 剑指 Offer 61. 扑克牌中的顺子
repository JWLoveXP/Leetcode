从扑克牌中随机抽5张牌，判断是不是一个顺子，即这5张牌是不是连续的。2～10为数字本身，A为1，J为11，Q为12，K为13，而大、小王为 0 ，可以看成任意数字。A 不能视为 14。
示例 1:
输入: [1,2,3,4,5]
输出: True
示例 2:
输入: [0,0,1,2,5]
输出: True

方法：由于只有14个数，因此通过数组计数，当遇到重复数字时，此时可能是错误的，然后找到(除0外的)最大小值，当最大小时差小于5时，必然时顺子
时间复杂度O(N)，空间复杂度O(1)
bool isStraight(vector<int>& nums) {
	vector<int>r(14, 0);
	int n = nums.size();
	int min = 13, max = 1;
	for (int i = 0; i < n; i++)
	{
		if (nums[i] != 0 && r[nums[i]] > 0)
			return false;
		if (nums[i] != 0)
		{
			r[nums[i]]++;
			if (nums[i] > max)
				max = nums[i];
			if (nums[i] < min)
				min = nums[i];
		}
	}
	return (max - min) < 5;
}
