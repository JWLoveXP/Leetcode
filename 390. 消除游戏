给定一个从1 到 n 排序的整数列表。
首先，从左到右，从第一个数字开始，每隔一个数字进行删除，直到列表的末尾。
第二步，在剩下的数字中，从右到左，从倒数第一个数字开始，每隔一个数字进行删除，直到列表开头。
我们不断重复这两步，从左到右和从右到左交替进行，直到只剩下一个数字。
返回长度为 n 的列表中，最后剩下的数字


方法：假设有2k个数字，编号1-2k,先从左到右，剩余数字为2，4，...，2k，然后从右到左删除，如果能把这个问题转化成从左到右的问题的话，那么就变成了有k个数求剩余数的问题了，那么如如何转化呢？
原问题的2->k,4->k-1,...,2k->1,所以 f(2k) = 2*(k+1 - f(k)),f(k)表示k个数剩余的数，并且对于奇数f(2k+1) = f(2k)
本质上是找规律问题，找到规律很简单，找不到就很难

int lastRemaining(int n) {
	if (n == 1)
		return 1;
	return 2 * (n / 2 + 1 - lastRemaining(n / 2));

}
