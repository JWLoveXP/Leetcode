从上到下按层打印二叉树，同一层的节点按从左到右的顺序打印，每一层打印到一行。

 

例如:
给定二叉树: [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7

返回其层次遍历结果：

[
  [3],
  [9,20],
  [15,7]
]

方法：按层记录，通过记录队列长度来记录当前层的长度
vector<vector<int>> levelOrder(TreeNode* root)
{
	vector<vector<int>>res;
	if (!root)
		return res;
	queue<TreeNode*>q;
	q.push(root);
	int i, n;
	TreeNode* temp;
	while (!q.empty())
	{
		vector<int>r;
		n = q.size();
		for (i = 0; i < n; i++)
		{
			temp = q.front();
			q.pop();
			r.push_back(temp->val);
			if (temp->left)
				q.push(temp->left);
			if (temp->right)
				q.push(temp->right);
		}
		res.push_back(r);
	}
	return res;
}
