编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）。
输入：00000000000000000000000000001011
输出：3
解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。

方法1：循环右移，判断个位是否是1
时间复杂度O(32)=O(1)，空间复杂度O(1)
int hammingWeight(uint32_t n) {
    int res = 0;
	if (n == 0)
		return 0;
	while (n)
	{
		if (n & 1 == 1)
			res++;
		n >>= 1;
	}
	return res;
}
方法2:n&(n-1)可以去掉n中的最后一位1，通过这种方式可以去掉1，直到n为0
时间复杂度O(32)=O(1)，空间复杂度O(1)
int hammingWeight(int n) {
	int res = 0;
	while (n)
	{
		n &= (n - 1);
		res++;
	}
	return res;
}
