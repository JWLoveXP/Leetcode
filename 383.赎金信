给定一个赎金信 (ransom) 字符串和一个杂志(magazine)字符串，判断第一个字符串 ransom 能不能由第二个字符串 magazines 里面的字符构成。如果可以构成，返回 true ；否则返回 false。

(题目说明：为了不暴露赎金信字迹，要从杂志上搜索各个需要的字母，组成单词来表达意思。杂志字符串中的每个字符只能在赎金信字符串中使用一次。)

方法：哈希表计数
bool canConstruct(string ransomNote, string magazine) {
	unordered_map<char, int>dict;
	for (char c : magazine)
		dict[c]++;
	for (char c : ransomNote)
	{
		if (dict.count(c) && dict[c] > 0)
			dict[c]--;
		else
			return false;
	}
	return true;
}

方法2：数组代替哈希表计数，由于只有小写字母，可以用数字计数，不用计算散列表，效率会更高
bool canConstruct(string ransomNote, string magazine) {
	if (magazine.size() < ransomNote.size())
		return false;
	vector<int>dict(26, 0);
	for (char& c : magazine)
		dict[c - 'a']++;
	for (char& c : ransomNote)
	{
		if (dict[c - 'a'] > 0)
			dict[c - 'a']--;
		else
			return false;
	}
	return true;
}
