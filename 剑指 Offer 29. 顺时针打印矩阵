输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。

方法：按层旋转打印，依次打印上边界，右边界，下边界和左边界，让后对应边界移动
vector<int> spiralOrder(vector<vector<int>>& matrix) {
	vector<int>res;
	if (matrix.empty() || matrix[0].empty())
		return res;
	int m = matrix.size();
	int n = matrix[0].size();
	int left = 0;
	int right = n - 1;
	int top = 0;
	int bottom = m - 1;
	int i;
	while (true)
	{
		//上边界从左到右
		for (i = left; i <= right; i++)
			res.push_back(matrix[top][i]);
		top++; 
		if (top > bottom)
			break;
		//右边界从上到下
		for (i = top; i <= bottom; i++)
			res.push_back(matrix[i][right]);
		right--;
		if (left > right)
			break;
		//下边界从右到左
		for (i = right; i >= left; i--)
			res.push_back(matrix[bottom][i]);
		bottom--;
		if (top > bottom)
			break;
		//左边界从下到上
		for (i = bottom; i >= top; i--)
			res.push_back(matrix[i][left]);
		left++;
		if (left > right)
			break;
	}
	return res;

}
