峰值元素是指其值大于左右相邻值的元素。
给定一个输入数组 nums，其中 nums[i] ≠ nums[i+1]，找到峰值元素并返回其索引。
数组可能包含多个峰值，在这种情况下，返回任何一个峰值所在位置即可。
你可以假设 nums[-1] = nums[n] = -∞。

方法1：一次遍历扫描，由于元素不相等，因为已经保证了左边小于当前元素，只需判断当前元素是否大于右边的元素，如果大于就返回索引
时间复杂度O(N),空间复杂度O(1)
int findPeakElement1(vector<int>& nums) {
	int len = nums.size();
	if (len == 1)
		return 0;
	int i;
	for (i = 0; i < len - 1; ++i)
	{
		if (nums[i] > nums[i + 1])
			return i;
	}
	return len-1;
}
方法2：二分查找，每个元素都在一个上升的坡或者一个下降的坡中，那么一定有个坡顶，即峰值
比较中间元素同后一个元素，如果大于，那么右边界变成中间元素，
否则，左边界变成中间元素后一个元素（后一个元素更大）。注意，不能同左边元素比，例[1,2,3,2],会陷入死循环
时间复杂度O(log2N)，空间复杂度O(1)
int findPeakElement(vector<int>& nums) {
	int left = 0;
	int right = nums.size()-1;
	while (left != right)
	{
		int mid = (left + right) / 2;
		if (nums[mid] > nums[mid + 1])
			right = mid;
		else
			left = mid + 1;
	}
	return left; 
}
