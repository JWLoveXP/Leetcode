给你一个长度为 n 的整数数组 nums，其中 n > 1，返回输出数组 output ，其中 output[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积。

方法：两次遍历，第一次遍历，从前到后，将当前元素的结果置为前面所有元素的乘积，后一次遍历从后到前，将后面所有元素的乘积乘上前面的结果
时间复杂度O(N)，额外空间复杂度O(1)
vector<int> productExceptSelf(vector<int>& nums) {
	int len = nums.size();
	vector<int>res(len, 1);
	int r = 1;
	int i;
	for (i = 0; i < len; i++)
	{
		res[i] *= r;
		r *= nums[i];
	}
	r = 1;
	for (i = len - 1; i >=0; i--)
	{
		res[i] *= r;
		r *= nums[i];
	}
	return res;
}
