老师想给孩子们分发糖果，有 N 个孩子站成了一条直线，老师会根据每个孩子的表现，预先给他们评分。
你需要按照以下要求，帮助老师给这些孩子分发糖果：

    每个孩子至少分配到 1 个糖果。
    相邻的孩子中，评分高的孩子必须获得更多的糖果。
那么这样下来，老师至少需要准备多少颗糖果呢？

方法1：两个数组，一个为从左到右保证左边正确，一个从右到左遍历，保证右边正确,然后遍历两个数组取大值
    int candy(vector<int>& ratings) {
	int len = ratings.size();
	if (len <= 1)
		return len;
	vector<int>left2right(len);
	vector<int>right2left(len);
	int val = 0;
	int i;
	left2right[0] = 1;
	for (i = 1; i < len; i++)
	{
		if (ratings[i] > ratings[i - 1])
			left2right[i] = left2right[i - 1] + 1;
		else
			left2right[i] = 1;
	}
	right2left[len - 1] = 1;
	for (i = len - 2; i >= 0; i--)
	{
		if (ratings[i] > ratings[i + 1])
			right2left[i] = right2left[i + 1] + 1;
		else
			right2left[i] = 1;
	}
	for (i = 0; i < len; i++)
		val += left2right[i] > right2left[i] ? left2right[i] : right2left[i];
	return val;
    }
