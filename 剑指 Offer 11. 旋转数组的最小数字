把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。  

示例 1：

输入：[3,4,5,1,2]
输出：1

示例 2：

输入：[2,2,2,0,1]
输出：0

方法：二分法，二分的关键在于对于缩放范围的选择，令	left = 0，right = n，如果mid > right，说明mid之前的元素可能大于right，mid处于左边上升区域，left = mid + 1,
如果mid == right，此时是因为有多个重复数字造成的，right--，如果mid > right,说明mid在右边递增区域中，由于mid可能就是目标，所以right = mid
int minArray(vector<int>& numbers) {
	int n = numbers.size() - 1;
	if (numbers[0] < numbers[n])
		return numbers[0];
	int left = 0;
	int right = n;
	int mid;
	while (left < right)
	{
		mid = left + (right - left) / 2;
		if (numbers[mid] > numbers[right])
			left = mid + 1;
		else if (numbers[mid] == numbers[right])
			right--;
		else
			right = mid;
	}
	return numbers[right];
}
