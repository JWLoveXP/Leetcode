给定一个数组 A[0,1,…,n-1]，请构建一个数组 B[0,1,…,n-1]，其中 B 中的元素 B[i]=A[0]×A[1]×…×A[i-1]×A[i+1]×…×A[n-1]。不能使用除法。

方法：根据题意，B数组中的数字i是A数组中除了数字i外其余数字乘积的结果，可以把乘积分成两部分，a和b,a是0~i-1，而b是i+1~n，那么可以先把每个数字的右边部分计算好，在计算左边部分
时间复杂度O(N)，空间复杂度O(N)
vector<int> constructArr(vector<int>& a) {
	int n = a.size();
	if (n < 2)
		return a;
	vector<int>val(n);//i之后所有值的乘积
	val[n - 1] = 1;
	int i;
	for (i = n - 2; i >= 0; i--)
		val[i] = val[i + 1] * a[i + 1];
	int r = 1;
	/*vector<int>res(n);*/
	for (i = 0; i < n; i++)
	{
		val[i] = r*val[i];//计算左半边
		r *= a[i];
	}
	return val;
}
