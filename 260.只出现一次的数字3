给定一个整数数组 nums，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的那两个元素

方法：两个相同数字异或的结果为0，那么数组中所有的数字异或的结果为两个出现一次数字的异或结果，取出结果中一位数字为1的位，
表示两个数字在这位中一个为1，一个为0。然后再将所有的数字与这个数字相与，则将数组中的数字分成两部分，各包含一个数字，在进行异或即可得到数字
时间复杂度O(N)，空间复杂度O(1)
vector<int> singleNumber(vector<int>& nums) {
	int len = nums.size();
	int left = 0, right = 0;
	int i, res = 0;
	for (i = 0; i < len; i++)
		res ^= nums[i];
	int h = 1;
	while ((res & h) == 0)
		h <<= 1;
	for (i = 0; i < len; i++)
	{
		if (nums[i] & h)
			left ^= nums[i];
		else
			right ^= nums[i];
	}
	vector<int>r;
	r.push_back(left);
	r.push_back(right);
	return r;
}
