用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )


方法：栈st1用于加入队列，栈st2用于删除，当队列中存在元素，st2中为空时，将st1中的元素加到st2，从而就变成了正序，st2栈顶就是当前的头部元素
实际复杂度O(1),每个元素就经过2次出栈和2次入栈，额外空间复杂度O(1)
class CQueue {
public:
	stack<int>st1;
	stack<int>st2;
	CQueue() {
		while (!st1.empty()) {
			st1.pop();
		}
		while (!st2.empty()) {
			st2.pop();
		}
	}

	void appendTail(int value) {
		st1.push(value);
	}

	int deleteHead() {
		if (st2.empty())
		{
			while (!st1.empty())
			{
				st2.push(st1.top());
				st1.pop();
			}
		}
		if (st2.empty())
			return -1;
		else
		{
			int res = st2.top();
			st2.pop();
			return res;
		}
	}
};
