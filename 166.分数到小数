给定两个整数，分别表示分数的分子 numerator 和分母 denominator，以字符串形式返回小数。

如果小数部分为循环小数，则将循环的部分括在括号内
输入: numerator = 2, denominator = 3
输出: "0.(6)"

方法：对于小数部分，记录计算出该位小数的余数，如果余数出现过，那么是循环小数，插入(),如果余数为0，则直接返回
string fractionToDecimal(int numerator, int denominator) {
	long long num = numerator; //防止越界

	string res = "";
	if (num*denominator < 0)
	{
		res += '-';
		num = abs(num);
		denominator = abs(denominator);
	}

	res += to_string(num / denominator);
	num %= denominator;
	if (num == 0)
		return res;
	else
		res += '.';

	unordered_map<int, int>mymap;//记录余数以及其位置，余数代表计算出该位小数的余数
	int index = 0;
	string r = "";
	while (num != 0 && mymap.count(num) == 0)//不为0，且余数未出现过
	{
		mymap[num] = index++;
		num *= 10;
		r += to_string(num / denominator);
		num %= denominator;
	}
	if (num != 0)
	{
		r.insert(r.begin() + mymap[num], '(');
		r += ')';
	}
	return res + r;
}
