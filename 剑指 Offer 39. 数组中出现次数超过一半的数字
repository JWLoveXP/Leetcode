数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。
你可以假设数组是非空的，并且给定的数组总是存在多数元素。

方法：由于众数大于数组一半，记录一个值val和其数量，当count == 0时，当前元素替换val值，当val和当前元素不相同时，count--，而相同时则count++，最后剩下的一定是众数
时间复杂度O(N)，空间复杂度O(1)
int majorityElement(vector<int>& nums) {
	int n = nums.size();
	int val = nums[0];
	int count = 1;
	for (int i = 1; i < n; i++)
	{
		if (count == 0)
		{
			val = nums[i];
			count = 1;
		}
		else
		{
			if (val != nums[i])
				count--;
			else
				count++;
		}
	}
	return val;
    }
