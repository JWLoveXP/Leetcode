给定两个字符串形式的非负整数 num1 和num2 ，计算它们的和。

注意：

    num1 和num2 的长度都小于 5100.
    num1 和num2 都只包含数字 0-9.
    num1 和num2 都不包含任何前导零。
    你不能使用任何內建 BigInteger 库， 也不能直接将输入的字符串转换为整数形式。

方法：使用双指针，分别指向一个字符串，从字符串右边向左边遍历，记住进位即可，遍历完后，进位不为0，则添加1
时间复杂度O(N),空间复杂度O(1)
    string addStrings(string num1, string num2) {
	if (num1.empty())
		return num2;
	if (num2.empty())
		return num1;

	int i = num1.size() - 1, j = num2.size() - 1;
	int val, n1, n2, flag = 0;
	string r = "";
	while (i >= 0 || j >= 0)
	{
		if (i >= 0)
			n1 = num1[i] - '0';
		else
			n1 = 0;
		if (j >= 0)
			n2 = num2[j] - '0';
		else
			n2 = 0;

		val = n1 + n2 +flag;
		r += ('0' + val % 10);
		flag = val / 10;
		i--;
		j--;
	}

	if (flag == 1)
		r += '1';
	reverse(r.begin(), r.end());
	return r;
    }
