给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m - 1] 。
请问 k[0]*k[1]*...*k[m - 1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。

答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回


方法：数学方法+快速幂
对于剪绳子问题，最终还是会剪成2和3的组合，优先考虑3，假设有b个3，那么剩余的绳子有0，1，2三种情况
当为0，则返回3^b
当为1，则返回1*3<2*2,所以取出一个3，4 * 3^b-1
当为2，则返回2 * 3^b
由于n的范围为[2, 1000]，所以需用求幂，使用快速幂方法，即分治的方法，需注意大数过限的问题，所以得使用long long类型
时间复杂度O(b),空间复杂度O(1)
long long quickM(int b)
{
	if (b == 0)
		return 1;
	long long val = quickM(b / 2);
	long long res = ((val % 1000000007) * (val % 1000000007)) % 1000000007;
	if (b % 2 == 1)
		res = (res * 3) % 1000000007;
	return res;
}
int cuttingRope(int n) {
	if (n <= 3)
		return n - 1;
	long long res = 1;
	int count = n % 3;
	int val = n / 3;
	if (count == 1)
	{
		res = 4;
		val--;
	}
	else if (count == 2)
		res = 2;
	res *= quickM(val);
	res %= 1000000007;
	return res;
}
